// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v3.20.3
// source: greenfield/storage.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { UInt64Value } from "./common";

export const protobufPackage = "greenfield.storage";

export enum VisibilityType {
  VISIBILITY_TYPE_UNSPECIFIED = 0,
  VISIBILITY_TYPE_PUBLIC_READ = 1,
  VISIBILITY_TYPE_PRIVATE = 2,
  VISIBILITY_TYPE_INHERIT = 3,
  UNRECOGNIZED = -1,
}

export function visibilityTypeFromJSON(object: any): VisibilityType {
  switch (object) {
    case 0:
    case "VISIBILITY_TYPE_UNSPECIFIED":
      return VisibilityType.VISIBILITY_TYPE_UNSPECIFIED;
    case 1:
    case "VISIBILITY_TYPE_PUBLIC_READ":
      return VisibilityType.VISIBILITY_TYPE_PUBLIC_READ;
    case 2:
    case "VISIBILITY_TYPE_PRIVATE":
      return VisibilityType.VISIBILITY_TYPE_PRIVATE;
    case 3:
    case "VISIBILITY_TYPE_INHERIT":
      return VisibilityType.VISIBILITY_TYPE_INHERIT;
    case -1:
    case "UNRECOGNIZED":
    default:
      return VisibilityType.UNRECOGNIZED;
  }
}

export function visibilityTypeToJSON(object: VisibilityType): string {
  switch (object) {
    case VisibilityType.VISIBILITY_TYPE_UNSPECIFIED:
      return "VISIBILITY_TYPE_UNSPECIFIED";
    case VisibilityType.VISIBILITY_TYPE_PUBLIC_READ:
      return "VISIBILITY_TYPE_PUBLIC_READ";
    case VisibilityType.VISIBILITY_TYPE_PRIVATE:
      return "VISIBILITY_TYPE_PRIVATE";
    case VisibilityType.VISIBILITY_TYPE_INHERIT:
      return "VISIBILITY_TYPE_INHERIT";
    case VisibilityType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}

export interface MsgUpdateBucketInfo {
  operator: string;
  bucketName: string;
  chargedReadQuota: UInt64Value | undefined;
  paymentAddress: string;
  visibility: VisibilityType;
}

function createBaseMsgUpdateBucketInfo(): MsgUpdateBucketInfo {
  return { operator: "", bucketName: "", chargedReadQuota: undefined, paymentAddress: "", visibility: 0 };
}

export const MsgUpdateBucketInfo: MessageFns<MsgUpdateBucketInfo> = {
  encode(message: MsgUpdateBucketInfo, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.operator !== "") {
      writer.uint32(10).string(message.operator);
    }
    if (message.bucketName !== "") {
      writer.uint32(18).string(message.bucketName);
    }
    if (message.chargedReadQuota !== undefined) {
      UInt64Value.encode(message.chargedReadQuota, writer.uint32(26).fork()).join();
    }
    if (message.paymentAddress !== "") {
      writer.uint32(34).string(message.paymentAddress);
    }
    if (message.visibility !== 0) {
      writer.uint32(40).int32(message.visibility);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): MsgUpdateBucketInfo {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    const end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseMsgUpdateBucketInfo();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.operator = reader.string();
          continue;
        }
        case 2: {
          if (tag !== 18) {
            break;
          }

          message.bucketName = reader.string();
          continue;
        }
        case 3: {
          if (tag !== 26) {
            break;
          }

          message.chargedReadQuota = UInt64Value.decode(reader, reader.uint32());
          continue;
        }
        case 4: {
          if (tag !== 34) {
            break;
          }

          message.paymentAddress = reader.string();
          continue;
        }
        case 5: {
          if (tag !== 40) {
            break;
          }

          message.visibility = reader.int32() as any;
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): MsgUpdateBucketInfo {
    return {
      operator: isSet(object.operator) ? globalThis.String(object.operator) : "",
      bucketName: isSet(object.bucketName) ? globalThis.String(object.bucketName) : "",
      chargedReadQuota: isSet(object.chargedReadQuota) ? UInt64Value.fromJSON(object.chargedReadQuota) : undefined,
      paymentAddress: isSet(object.paymentAddress) ? globalThis.String(object.paymentAddress) : "",
      visibility: isSet(object.visibility) ? visibilityTypeFromJSON(object.visibility) : 0,
    };
  },

  toJSON(message: MsgUpdateBucketInfo): unknown {
    const obj: any = {};
    if (message.operator !== "") {
      obj.operator = message.operator;
    }
    if (message.bucketName !== "") {
      obj.bucketName = message.bucketName;
    }
    if (message.chargedReadQuota !== undefined) {
      obj.chargedReadQuota = UInt64Value.toJSON(message.chargedReadQuota);
    }
    if (message.paymentAddress !== "") {
      obj.paymentAddress = message.paymentAddress;
    }
    if (message.visibility !== 0) {
      obj.visibility = visibilityTypeToJSON(message.visibility);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<MsgUpdateBucketInfo>, I>>(base?: I): MsgUpdateBucketInfo {
    return MsgUpdateBucketInfo.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<MsgUpdateBucketInfo>, I>>(object: I): MsgUpdateBucketInfo {
    const message = createBaseMsgUpdateBucketInfo();
    message.operator = object.operator ?? "";
    message.bucketName = object.bucketName ?? "";
    message.chargedReadQuota = (object.chargedReadQuota !== undefined && object.chargedReadQuota !== null)
      ? UInt64Value.fromPartial(object.chargedReadQuota)
      : undefined;
    message.paymentAddress = object.paymentAddress ?? "";
    message.visibility = object.visibility ?? 0;
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
